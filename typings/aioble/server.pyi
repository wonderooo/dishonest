from typing import Any

def register_services(*args, **kwargs) -> Any: ...
def log_error(*args, **kwargs) -> Any: ...
def register_irq_handler(*args, **kwargs) -> Any: ...
def ensure_active(*args, **kwargs) -> Any: ...
def log_info(*args, **kwargs) -> Any: ...
def log_warn(*args, **kwargs) -> Any: ...
def const(*args, **kwargs) -> Any: ...

class DeviceTimeout:
    def __init__(self, *argv, **kwargs) -> None: ...

class DeviceConnection:
    def timeout(self, *args, **kwargs) -> Any: ...
    def services(self, *args, **kwargs) -> Any: ...
    def is_connected(self, *args, **kwargs) -> Any: ...
    service: Any
    pair: Any
    exchange_mtu: Any
    l2cap_accept: Any
    disconnected: Any
    disconnect: Any
    l2cap_connect: Any
    device_task: Any
    def __init__(self, *argv, **kwargs) -> None: ...

ble: Any

class BaseCharacteristic:
    def write(self, *args, **kwargs) -> Any: ...
    def on_read(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    written: Any
    def __init__(self, *argv, **kwargs) -> None: ...

class Characteristic:
    def on_read(self, *args, **kwargs) -> Any: ...
    def notify(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    indicate: Any
    written: Any
    def __init__(self, *argv, **kwargs) -> None: ...

class Service:
    def __init__(self, *argv, **kwargs) -> None: ...

class BufferedCharacteristic:
    def on_read(self, *args, **kwargs) -> Any: ...
    def notify(self, *args, **kwargs) -> Any: ...
    def write(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    indicate: Any
    written: Any
    def __init__(self, *argv, **kwargs) -> None: ...

class Descriptor:
    def write(self, *args, **kwargs) -> Any: ...
    def on_read(self, *args, **kwargs) -> Any: ...
    def read(self, *args, **kwargs) -> Any: ...
    written: Any
    def __init__(self, *argv, **kwargs) -> None: ...
